# Generated by sila2.code_generator; sila2.__version__: 0.10.2
from __future__ import annotations

from abc import ABC, abstractmethod
from typing import TYPE_CHECKING

from sila2.server import FeatureImplementationBase, MetadataDict

from .labwareontologyservice_types import CreateLabware_Responses

if TYPE_CHECKING:
    from ...server import Server


class LabwareOntologyServiceBase(FeatureImplementationBase, ABC):
    parent_server: Server

    def __init__(self, parent_server: Server):
        """
        CRUD operations on the labware ontology.
        """
        super().__init__(parent_server=parent_server)

    @abstractmethod
    def CreateLabware(self, Name: str, *, metadata: MetadataDict) -> CreateLabware_Responses:
        """
        Creates Labware individual in Labware ontology.


        :param Name: Name of the labware.

        :param metadata: The SiLA Client Metadata attached to the call

        """
        pass
